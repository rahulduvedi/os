package:
  name: flannel
  version: "0.26.5"
  epoch: 4
  description: flannel is a network fabric for containers, designed for Kubernetes
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/flannel-io/flannel
      tag: v${{package.version}}
      expected-commit: "0d1f8e28f5a6697629c7b39627b342ac48f09862"

  - uses: go/build
    with:
      packages: "."
      output: "flanneld"
      ldflags: "-X github.com/flannel-io/flannel/pkg/version.Version=v${{package.version}}"

  - runs: |
      CGO_ENABLED=0
      if [ "$(go env GOARCH)" = "amd64" ]; then
        CGO_ENABLED=1
      fi
      CGO_ENABLED=$CGO_ENABLED \
        go build \
        -ldflags="-X github.com/flannel-io/flannel/pkg/version.Version=v${{package.version}}" \
        -o "${{targets.destdir}}"/usr/bin/flanneld

update:
  enabled: true
  github:
    identifier: flannel-io/flannel
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - ${{package.name}}
        - etcd
  pipeline:
    - runs: |
        # Check flanneld version
        flanneld --version
        
        # Start etcd (default v3)
        mkdir -p /var/lib/etcd
        etcd --data-dir=/var/lib/etcd --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 > /tmp/etcd.log 2>&1 &
        ETCD_PID=$!
        
        # Wait for etcd readiness (max 5 attempts)
        for i in {1..5}; do
          if curl -s http://127.0.0.1:2379/version; then
            break
          fi
          sleep 1
        done
        
        # Set flannel config in etcd using etcdctl v3 command
        etcdctl --endpoints=http://127.0.0.1:2379 put /coreos.com/network/config '{"Network": "10.244.0.0/16", "Backend": {"Type": "host-gw"}}'
        
        # Run flanneld with a timeout, specifying a valid interface (e.g. eth0)
        timeout 3s flanneld --etcd-endpoints=http://127.0.0.1:2379 --iface=eth0 > /tmp/flannel-output.log 2>&1 || true
        
        cat /tmp/flannel-output.log

        # Verify subnet manager creation
        if ! grep -q "Created subnet manager" /tmp/flannel-output.log; then
          cat /tmp/flannel-output.log
          exit 1
        fi
        
        # Clean up: Stop etcd
        kill $ETCD_PID