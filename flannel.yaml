package:
  name: flannel
  version: "0.26.5"
  epoch: 12
  description: flannel is a network fabric for containers, designed for Kubernetes
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/flannel-io/flannel
      tag: v${{package.version}}
      expected-commit: 0d1f8e28f5a6697629c7b39627b342ac48f09862

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.36.0

  # Build with CGO_ENABLED=1 to include the UDP backend
  - runs: |
      CGO_ENABLED=0
      if [ "$(go env GOARCH)" = "amd64" ]; then
        CGO_ENABLED=1
      fi
      CGO_ENABLED=$CGO_ENABLED go build -o "${{targets.destdir}}"/usr/bin/flanneld \
        -ldflags "-extldflags \"-static\" -X github.com/flannel-io/flannel/pkg/version.Version=${{package.version}}"
update:
  enabled: true
  github:
    identifier: flannel-io/flannel
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - ${{ package.name }}
        - etcd
  pipeline:
    - runs: |
        #!/bin/bash
        set -euxo pipefail

        # Check flanneld version
        flanneld --version

        # Start etcd with a dedicated temporary data directory
        mkdir -p /tmp/etcd-data
        etcd --data-dir=/tmp/etcd-data \
          --listen-client-urls=http://127.0.0.1:2379 \
          --advertise-client-urls=http://127.0.0.1:2379 > /tmp/etcd.log 2>&1 &
        ETCD_PID=$!
        # Ensure etcd is always killed even if an error occurs
        trap 'kill $ETCD_PID || true' EXIT

        # Wait for etcd readiness (try up to 5 times)
        for i in {1..5}; do
          if etcdctl --endpoints=http://127.0.0.1:2379 endpoint status --write-out=table; then
            break
          fi
          sleep 1
        done

        # Set flannel configuration in etcd using etcdctl v3 command
        etcdctl --endpoints=http://127.0.0.1:2379 put /coreos.com/network/config \
          '{"Network": "10.244.0.0/16", "Backend": {"Type": "host-gw"}}'

        # Run flanneld with a timeout, specifying a valid interface (e.g. eth0)
        timeout 5s flanneld --etcd-endpoints=http://127.0.0.1:2379 --iface=eth0 > /tmp/flannel-output.log 2>&1 || true

        # Output flannel logs for debugging purposes
        cat /tmp/flannel-output.log

        # Verify that flanneld successfully created the subnet manager
        if ! grep -q "Created subnet manager" /tmp/flannel-output.log; then
          echo "Subnet manager not created. Logs:"
          cat /tmp/flannel-output.log
          exit 1
        fi

        # Optionally, check that the subnet file was created and contains expected values
        if [ ! -f /run/flannel/subnet.env ]; then
          echo "Subnet file not found"
          exit 1
        fi
        grep -q "FLANNEL_SUBNET=" /run/flannel/subnet.env
